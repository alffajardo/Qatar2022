dims <- dim(bets2)
similarities <- matrix(NA, dims[1],dims[1],
dimnames = list(bets$numero_participante,bets$numero_participante))
for (i in 1:nrow(bets2) ){
x <- bets2[i,]
y <- apply(bets2,1,"==",x) %>%
colSums
similarities[i,] <- y
}
similarities <- similarities / 16 * 100
diag(similarities) <- NA
png(filename = "media/similarities_GS3.png",
width = 10,height = 10,units = "cm",res = 196)
par = c(bg = "gray85")
corrplot(similarities,
method = "color",
col = plasma(50), diag = F,
addgrid.col = T,tl.col = "Black",
order = "hclust",   main = "Similitud entre jugadores",
mar = c(1,1,1,1),cex.main = 1,
is.corr = F,
type = "full",
hclust.method = "ward.D",tl.cex = 0.5,
number.digits = 0,cl.cex = 0.5)
dev.off()
delta_participants <- colMeans(similarities,na.rm = T)
bets$delta <- delta_participants
top <- bets %>%
arrange(delta) %>%
select(1:2) %>%
head(n = 5)
write.table(top,"top_GS3.csv",
sep = ',',
quote = F,
row.names = F)
library(googlesheets4)
library(googledrive)
library(dplyr)
library(tidyr)
library(readr)
library(purrr)
# read the data
options(gargle_oauth_email = TRUE)
drive_auth(email = TRUE)
# Calificar la ronda 1
GS1_picks <- read_csv("GS1_picks.csv")
matches <- drive_find(pattern = "matches",type = "spreadsheet",n_max=1)$id
matches <- read_sheet(matches) %>%
filter(complete.cases(.)) %>%
mutate(GD = abs(Goals_Local - Goals_Visitor))
GS1_picks2 <- select(GS1_picks,-c(1,2))
library(googlesheets4)
library(googledrive)
library(dplyr)
library(tidyr)
library(readr)
library(purrr)
# read the data
options(gargle_oauth_email = TRUE)
drive_auth(email = TRUE)
# Calificar la ronda 1
GS1_picks <- read_csv("GS1_picks.csv")
matches <- drive_find(pattern = "matches",type = "spreadsheet",n_max=1)$id
matches <- read_sheet(matches) %>%
filter(complete.cases(.)) %>%
mutate(GD = abs(Goals_Local - Goals_Visitor))
GS1_picks2 <- select(GS1_picks,-c(1,2))
GS1 <- matches %>%
filter (Round == "M1") %>%
select(Result) %>%
as.vector() %>%
unlist()
attach(GS1_picks)
match_names <- names(GS1_picks2)[1:length(GS1)]
# temporalmente se dejará asi
GS1_all <- map_dfc(1:length(GS1),~if_else( GS1[.x] == GS1_picks2[,.x],true = 1,0)) %>%
set_names(match_names)
cumsum_gs1 <- apply(GS1_all,1,cumsum)
GS1 <- rowSums(GS1_all)
scores_GS1 <- data.frame(numero_participante,Nombre,GS1_all)
# Calificar la ronda 2
GS2_picks <- read_csv("GS2_picks.csv")
GS1 <- rowSums(GS1_all)
scores_GS1 <- data.frame(numero_participante,Nombre,GS1_all)
# Calificar la ronda 2
GS2_picks <- read_csv("GS2_picks.csv")
matches <- drive_find(pattern = "matches",type = "spreadsheet",n_max=1)$id
matches <- read_sheet(matches) %>%
filter(complete.cases(.)) %>%
mutate(GD = abs(Goals_Local - Goals_Visitor))
GS2_picks2 <- select(GS2_picks,-c(1,2))
GS2 <- matches %>%
filter (Round == "M2") %>%
select(Result) %>%
as.vector() %>%
unlist()
match_names <- names(GS2_picks2)[1:length(GS2)]
# temporalmente se dejará asi
GS2_all <- map_dfc(1:length(GS2),~if_else( GS2[.x] == GS2_picks2[,.x],true = 1,0)) %>%
set_names(match_names)
GS2 <- rowSums(GS2_all)
scores_GS2 <- data.frame(numero_participante,Nombre,GS2_all)
# Calificar la ronda 3
GS3_picks <- read_csv("GS3_picks.csv")
matches <- drive_find(pattern = "matches",type = "spreadsheet",n_max=1)$id
matches <- read_sheet(matches) %>%
filter(complete.cases(.)) %>%
mutate(GD = abs(Goals_Local - Goals_Visitor))
GS3_picks2 <- select(GS3_picks,-c(1,2))
GS3 <- matches %>%
filter (Round == "M3") %>%
select(Result) %>%
as.vector() %>%
unlist()
match_names <- names(GS3_picks2)[1:length(GS3)]
# temporalmente se dejará asi
GS3_all <- map_dfc(1:length(GS3),~if_else( GS3[.x] == GS3_picks2[,.x],true = 1,0)) %>%
set_names(match_names)
View(GS3_picks2)
View(GS3_picks2)
View(GS3_picks)
View(GS3_picks)
match_names <- names(GS3_picks2)[1:length(GS3)]
# temporalmente se dejará asi
GS3_all <- map_dfc(1:length(GS3),~if_else( GS3[.x] == GS3_picks2[,.x],true = 1,0)) %>%
set_names(match_names)
GS3 <- rowSums(GS3_all)
scores_GS3 <- data.frame(numero_participante,Nombre,GS3_all)
### Escribir el output
scores <- data.frame(numero_participante,Nombre, GS1,GS2,GS3) %>%
group_by (numero_participante) %>%
mutate(Total = sum(GS1,GS2,GS3)) %>%
ungroup %>%
arrange(desc(Total),numero_participante)
write.table(scores,"Overall_scores.csv",quote = F,sep=",",row.names = F)
write.table(scores_GS1, "GS1_complete_scores.csv",sep = ",",
quote = F ,row.names = F )
write.table(scores_GS2, "GS2_complete_scores.csv",sep = ",",
quote = F ,row.names = F )
write.table(scores_GS3, "GS3_complete_scores.csv",sep = ",",
quote = F ,row.names = F )
source("~/Documents/GitHub/Qatar2022/score_picks.R", echo=TRUE)
ls
GS3_all
GS1_picks2 <- select(GS1_picks,-c(1,2))
GS1 <- matches %>%
filter (Round == "M1") %>%
select(Result) %>%
as.vector() %>%
unlist()
attach(GS1_picks)
match_names <- names(GS1_picks2)[1:length(GS1)]
# temporalmente se dejará asi
GS1_all <- map_dfc(1:length(GS1),~if_else( GS1[.x] == GS1_picks2[,.x],true = 1,0)) %>%
set_names(match_names)
GS1 <- rowSums(GS1_all)
scores_GS1 <- data.frame(numero_participante,Nombre,GS1_all)
# Calificar la ronda 2
GS2_picks <- read_csv("GS2_picks.csv")
matches <- drive_find(pattern = "matches",type = "spreadsheet",n_max=1)$id
matches <- read_sheet(matches) %>%
filter(complete.cases(.)) %>%
mutate(GD = abs(Goals_Local - Goals_Visitor))
GS2_picks2 <- select(GS2_picks,-c(1,2))
GS2 <- matches %>%
filter (Round == "M2") %>%
select(Result) %>%
as.vector() %>%
unlist()
match_names <- names(GS2_picks2)[1:length(GS2)]
# temporalmente se dejará asi
GS2_all <- map_dfc(1:length(GS2),~if_else( GS2[.x] == GS2_picks2[,.x],true = 1,0)) %>%
set_names(match_names)
GS2 <- rowSums(GS2_all)
scores_GS2 <- data.frame(numero_participante,Nombre,GS2_all)
# Calificar la ronda 3
GS3_picks <- read_csv("GS3_picks.csv")
matches <- drive_find(pattern = "matches",type = "spreadsheet",n_max=1)$id
source("~/Documents/Qatar2022/score_picks.R", echo=TRUE)
scores_KO8 <- data.frame(numero_participante,Nombre,KO8)
scores$KO8[21] <- 0
scores_KO8
KO8 <- rowSums(KO8_all,na.rm = T)
K08[21] <- 0
KO8_all
scores_KO8 <- data.frame(numero_participante,Nombre,KO8)
scores_KO8 <- data.frame(numero_participante,Nombre,KO8_all)
scores_KO8
scores_KO8 <- data.frame(numero_participante,Nombre,KO8_all)
### Escribir el output
scores <- data.frame(numero_participante,Nombre, GS1,GS2,GS3,KO8) %>%
group_by (numero_participante) %>%
mutate(Total = sum(GS1,GS2,GS3)) %>%
ungroup %>%
arrange(desc(Total),numero_participante)
scores_KO8
scores
View(scores)
View(scores)
scores$KO8==21
scores$KO8==021
scores$numero_participante=="021"
View(scores)
View(scores)
which(scores$numero_participante="021")
which(scores$numero_participante=="021")
scores$KO8[ which(scores$numero_participante=="021")] <- 0
source("~/Documents/Qatar2022/score_picks.R", echo=TRUE)
View(scores)
View(scores)
KO8_predicted_scores <- read_csv("KO8_predicted_scores.csv")
KO8_predicted_scores
K08 <-
KO8_predicted_scores <- read_csv("KO8_predicted_scores.csv") %>%
select(-c(1:2))
KO8_predicted_scores
source("~/Documents/Qatar2022/score_picks.R", echo=TRUE)
source("~/Documents/Qatar2022/score_picks.R", echo=TRUE)
K08_goals <- matches %>%
filter(Round == "KO8") %>%
select(Score)
View(K08_goals)
View(K08_goals)
K08_goals <- matches %>%
filter(Round == "KO8") %>%
select(Score) %>%
as.vector() %>%
unlist()
KO8
KO8_goals <- matches %>%
filter(Round == "KO8") %>%
select(Score) %>%
as.vector() %>%
unlist()
KO8_goals
map_dfc(1:length(KO8),~if_else( KO8_goals[.x] == KO8_predicted_scores[,.x],true = 1,0)) %>%
set_names(match_names)
map_dfc(1:length(KO8_goals),~if_else( KO8_goals[.x] == KO8_predicted_scores[,.x],true = 1,0)) %>%
set_names(match_names)
KO8_score_bonus <- map_dfc(1:length(KO8_goals),~if_else( KO8_goals[.x] == KO8_predicted_scores[,.x],true = 1,0)) %>%
set_names(match_names)
View(KO8_score_bonus)
View(KO8_score_bonus)
KO_bonus<- rowSums(KO8_all,na.rm = T)
KO8_bonus<- rowSums(KO8_all,na.rm = T)
KO8_bonus<- rowSums(KO8_all,na.rm = T)
KO_bonus
KO8_bonus<- rowSums(KO8_score_bonus,na.rm = T)
KO8_bonus
KO8_bonus[21] <- 0
### Escribir el output
scores <- data.frame(numero_participante,Nombre, GS1,GS2,GS3,KO8,KO8_bonus) %>%
group_by (numero_participante) %>%
mutate(Total = sum(GS1,GS2,GS3,KO8,KO8_bonus,na.rm = T)) %>%
ungroup %>%
arrange(desc(Total),numero_participante)
scores$KO8[ which(scores$numero_participante=="021")] <- 0
K08[21] <- 0
K08
KO8
KO8_all
scores$KO8[which(scores$numero_participante=="0021")]
KO8_bonus <- rowSums(KO8_score_bonus,na.rm = T)
### Escribir el output
scores <- data.frame(numero_participante,Nombre, GS1,GS2,GS3,KO8,KO8_bonus) %>%
group_by (numero_participante)
scores$KO8[which(scores$numero_participante=="021")] <- 0
scores$KO8_bonus[which(scores$numero_participante=="021")] <- 0
scores <- scores %>%
mutate(Total = sum(GS1,GS2,GS3,KO8,KO8_bonus,na.rm = T)) %>%
ungroup %>%
arrange(desc(Total),numero_participante)
write.table(scores,"Overall_scores.csv",quote = F,sep=",",row.names = F)
write.table(scores_GS1, "GS1_complete_scores.csv",sep = ",",
quote = F ,row.names = F )
write.table(scores_GS2, "GS2_complete_scores.csv",sep = ",",
quote = F ,row.names = F )
write.table(scores_GS3, "GS3_complete_scores.csv",sep = ",",
quote = F ,row.names = F )
write.table(KO8_scores, "Ko8_complete_scores.csv",sep = ",",
quote = F ,row.names = F )
library(googlesheets4)
library(googledrive)
library(dplyr)
library(tidyr)
library(readr)
library(purrr)
# read the data
options(gargle_oauth_email = TRUE)
drive_auth(email = TRUE)
# Calificar la ronda 1
GS1_picks <- read_csv("GS1_picks.csv")
matches <- drive_find(pattern = "matches",type = "spreadsheet",n_max=1)$id
matches <- read_sheet(matches) %>%
filter(complete.cases(.)) %>%
mutate(GD = abs(Goals_Local - Goals_Visitor))
GS1_picks2 <- select(GS1_picks,-c(1,2))
GS1 <- matches %>%
filter (Round == "M1") %>%
select(Result) %>%
as.vector() %>%
unlist()
attach(GS1_picks)
match_names <- names(GS1_picks2)[1:length(GS1)]
# temporalmente se dejará asi
GS1_all <- map_dfc(1:length(GS1),~if_else( GS1[.x] == GS1_picks2[,.x],true = 1,0)) %>%
set_names(match_names)
GS1 <- rowSums(GS1_all)
scores_GS1 <- data.frame(numero_participante,Nombre,GS1_all)
# Calificar la ronda 2
GS2_picks <- read_csv("GS2_picks.csv")
matches <- drive_find(pattern = "matches",type = "spreadsheet",n_max=1)$id
matches <- read_sheet(matches) %>%
filter(complete.cases(.)) %>%
mutate(GD = abs(Goals_Local - Goals_Visitor))
GS2_picks2 <- select(GS2_picks,-c(1,2))
GS2 <- matches %>%
filter (Round == "M2") %>%
select(Result) %>%
as.vector() %>%
unlist()
match_names <- names(GS2_picks2)[1:length(GS2)]
# temporalmente se dejará asi
GS2_all <- map_dfc(1:length(GS2),~if_else( GS2[.x] == GS2_picks2[,.x],true = 1,0)) %>%
set_names(match_names)
GS2 <- rowSums(GS2_all)
scores_GS2 <- data.frame(numero_participante,Nombre,GS2_all)
# Calificar la ronda 3
GS3_picks <- read_csv("GS3_picks.csv")
matches <- drive_find(pattern = "matches",type = "spreadsheet",n_max=1)$id
matches <- read_sheet(matches) %>%
filter(complete.cases(.)) %>%
mutate(GD = abs(Goals_Local - Goals_Visitor),
Score = paste(Goals_Local,"-",Goals_Visitor,sep=""))
GS3_picks2 <- select(GS3_picks,-c(1,2))
GS3 <- matches %>%
filter (Round == "M3") %>%
select(Result) %>%
as.vector() %>%
unlist()
match_names <- names(GS3_picks2)[1:length(GS3)]
# temporalmente se dejará asi
GS3_all <- map_dfc(1:length(GS3),~if_else( GS3[.x] == GS3_picks2[,.x],true = 1,0)) %>%
set_names(match_names)
GS3 <- rowSums(GS3_all)
scores_GS3 <- data.frame(numero_participante,Nombre,GS3_all)
KO8_picks <- read_csv("KO8_picks.csv")
KO8_picks2 <- select(KO8_picks,-c(1,2))
KO8 <- matches %>%
filter (Round == "KO8") %>%
select(Result) %>%
as.vector() %>%
unlist()
match_names <- names(KO8_picks2)[1:length(KO8)]
KO8_all <- map_dfc(1:length(KO8),~if_else( KO8[.x] == KO8_picks2[,.x],true = 1,0)) %>%
set_names(match_names)
KO8 <- rowSums(KO8_all,na.rm = T)
K08[21,] <- 0
scores_KO8 <- data.frame(numero_participante,Nombre,KO8_all)
KO8_goals <- matches %>%
filter(Round == "KO8") %>%
select(Score) %>%
as.vector() %>%
unlist()
KO8_goals <- matches %>%
filter(Round == "KO8") %>%
select(Score) %>%
as.vector() %>%
unlist()
KO8_predicted_scores <- read_csv("KO8_predicted_scores.csv") %>%
select(-c(1:2))
match_names <- names(KO8_picks2)[1:length(KO8)]
KO8_all <- map_dfc(1:length(KO8),~if_else( KO8[.x] == KO8_picks2[,.x],true = 1,0)) %>%
set_names(match_names)
KO8_all <- map_dfc(1:length(KO8),~if_else( KO8[.x] == KO8_picks2[,.x],true = 1,0)) %>%
set_names(match_names)
KO8
KO8 %>% length()
KO8 <- matches %>%
filter (Round == "KO8") %>%
select(Result) %>%
as.vector() %>%
unlist()
KO8
KO8_all <- map_dfc(1:length(KO8),~if_else( KO8[.x] == KO8_picks2[,.x],true = 1,0)) %>%
set_names(match_names)
match_names
KO8_picks <- read_csv("KO8_picks.csv") %>%
filter(complete.cases(.))
KO8_picks <- read_csv("KO8_picks.csv")
library(googlesheets4)
library(googledrive)
library(dplyr)
library(tidyr)
library(readr)
library(purrr)
# read the data
options(gargle_oauth_email = TRUE)
drive_auth(email = TRUE)
# Calificar la ronda 1
GS1_picks <- read_csv("GS1_picks.csv")
matches <- drive_find(pattern = "matches",type = "spreadsheet",n_max=1)$id
matches <- read_sheet(matches) %>%
filter(complete.cases(.)) %>%
mutate(GD = abs(Goals_Local - Goals_Visitor))
GS1_picks2 <- select(GS1_picks,-c(1,2))
GS1 <- matches %>%
filter (Round == "M1") %>%
select(Result) %>%
as.vector() %>%
unlist()
attach(GS1_picks)
match_names <- names(GS1_picks2)[1:length(GS1)]
# temporalmente se dejará asi
GS1_all <- map_dfc(1:length(GS1),~if_else( GS1[.x] == GS1_picks2[,.x],true = 1,0)) %>%
set_names(match_names)
GS1 <- rowSums(GS1_all)
scores_GS1 <- data.frame(numero_participante,Nombre,GS1_all)
# Calificar la ronda 2
GS2_picks <- read_csv("GS2_picks.csv")
matches <- drive_find(pattern = "matches",type = "spreadsheet",n_max=1)$id
matches <- read_sheet(matches) %>%
filter(complete.cases(.)) %>%
mutate(GD = abs(Goals_Local - Goals_Visitor))
GS2_picks2 <- select(GS2_picks,-c(1,2))
GS2 <- matches %>%
filter (Round == "M2") %>%
select(Result) %>%
as.vector() %>%
unlist()
match_names <- names(GS2_picks2)[1:length(GS2)]
# temporalmente se dejará asi
GS2_all <- map_dfc(1:length(GS2),~if_else( GS2[.x] == GS2_picks2[,.x],true = 1,0)) %>%
set_names(match_names)
GS2 <- rowSums(GS2_all)
scores_GS2 <- data.frame(numero_participante,Nombre,GS2_all)
# Calificar la ronda 3
GS3_picks <- read_csv("GS3_picks.csv")
matches <- drive_find(pattern = "matches",type = "spreadsheet",n_max=1)$id
matches <- read_sheet(matches) %>%
filter(complete.cases(.)) %>%
mutate(GD = abs(Goals_Local - Goals_Visitor),
Score = paste(Goals_Local,"-",Goals_Visitor,sep=""))
GS3_picks2 <- select(GS3_picks,-c(1,2))
GS3 <- matches %>%
filter (Round == "M3") %>%
select(Result) %>%
as.vector() %>%
unlist()
match_names <- names(GS3_picks2)[1:length(GS3)]
# temporalmente se dejará asi
GS3_all <- map_dfc(1:length(GS3),~if_else( GS3[.x] == GS3_picks2[,.x],true = 1,0)) %>%
set_names(match_names)
GS3 <- rowSums(GS3_all)
scores_GS3 <- data.frame(numero_participante,Nombre,GS3_all)
KO8_picks <- read_csv("KO8_picks.csv")
KO8_picks2 <- select(KO8_picks,-c(1,2))
KO8 <- matches %>%
filter (Round == "KO8") %>%
select(Result) %>%
as.vector() %>%
unlist()
K08
KO8
match_names <- names(KO8_picks2)[1:length(KO8)]
match_names
KO8_all <- map_dfc(1:length(KO8),~if_else( KO8[.x] == KO8_picks2[,.x],true = 1,0)) %>%
set_names(match_names)
KO8 <- rowSums(KO8_all,na.rm = T)
scores_KO8 <- data.frame(numero_participante,Nombre,KO8_all)
KO8_goals <- matches %>%
filter(Round == "KO8") %>%
select(Score) %>%
as.vector() %>%
unlist()
KO8_predicted_scores <- read_csv("KO8_predicted_scores.csv") %>%
select(-c(1:2))
KO8_score_bonus <- map_dfc(1:length(KO8_goals),~if_else( KO8_goals[.x] == KO8_predicted_scores[,.x],true = 1,0)) %>%
set_names(match_names)
KO8_bonus <- rowSums(KO8_score_bonus,na.rm = T)
### Escribir el output
scores <- data.frame(numero_participante,Nombre, GS1,GS2,GS3,KO8,KO8_bonus) %>%
group_by (numero_participante)
scores$KO8[which(scores$numero_participante=="021")] <- 0
scores$KO8_bonus[which(scores$numero_participante=="021")] <- 0
scores <- scores %>%
mutate(Total = sum(GS1,GS2,GS3,KO8,KO8_bonus,na.rm = T)) %>%
ungroup %>%
arrange(desc(Total),numero_participante)
write.table(scores,"Overall_scores.csv",quote = F,sep=",",row.names = F)
write.table(scores_GS1, "GS1_complete_scores.csv",sep = ",",
quote = F ,row.names = F )
write.table(scores_GS2, "GS2_complete_scores.csv",sep = ",",
quote = F ,row.names = F )
write.table(scores_GS3, "GS3_complete_scores.csv",sep = ",",
quote = F ,row.names = F )
write.table(KO8_scores, "Ko8_complete_scores.csv",sep = ",",
quote = F ,row.names = F )
write.table(scores,"Overall_scores.csv",quote = F,sep=",",row.names = F)
write.table(scores_GS1, "GS1_complete_scores.csv",sep = ",",
quote = F ,row.names = F )
write.table(scores_GS2, "GS2_complete_scores.csv",sep = ",",
quote = F ,row.names = F )
write.table(scores_GS3, "GS3_complete_scores.csv",sep = ",",
quote = F ,row.names = F )
write.table(scores_KO8, "Ko8_complete_scores.csv",sep = ",",
quote = F ,row.names = F )
KO8_score_bonus
write.table(scores_KO8, "Ko8_complete_bonus.csv",sep = ",",
quote = F ,row.names = F )
write.table(scores_KO8, "Ko8_complete_bonus.csv",sep = ",",
quote = F ,row.names = F )
